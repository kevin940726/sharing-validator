// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`array 1`] = `
Object {
  "errors": Array [
    Object {
      "content": "https://example.com",
      "message": "\\"og:url\\" is not set, fallback to the requested url as default value instead",
      "property": "og:url",
      "type": "warning",
      "valid": false,
    },
    Object {
      "content": undefined,
      "message": "Either \\"og:title\\" property or <title> value is required.",
      "property": "og:title",
      "valid": false,
    },
    Object {
      "content": "website",
      "message": "\\"og:type\\" is not set, fallback to \`\\"website\\"\` as default value.",
      "property": "og:type",
      "type": "warning",
      "valid": false,
    },
    Object {
      "content": undefined,
      "message": "\\"og:image.alt\\" is required when specifying \\"og:image\\" or \\"og:image:url\\"",
      "property": "og:image:[0]:alt",
      "type": "warning",
      "valid": false,
    },
    Object {
      "content": undefined,
      "message": "\\"og:image.alt\\" is required when specifying \\"og:image\\" or \\"og:image:url\\"",
      "property": "og:image:[1]:alt",
      "type": "warning",
      "valid": false,
    },
    Object {
      "content": undefined,
      "message": "\\"og:image.alt\\" is required when specifying \\"og:image\\" or \\"og:image:url\\"",
      "property": "og:image:[2]:alt",
      "type": "warning",
      "valid": false,
    },
  ],
  "validations": Array [
    Object {
      "content": "https://example.com",
      "message": "\\"og:url\\" is not set, fallback to the requested url as default value instead",
      "property": "og:url",
      "type": "warning",
      "valid": false,
    },
    Object {
      "content": undefined,
      "message": "Either \\"og:title\\" property or <title> value is required.",
      "property": "og:title",
      "valid": false,
    },
    Object {
      "content": "website",
      "message": "\\"og:type\\" is not set, fallback to \`\\"website\\"\` as default value.",
      "property": "og:type",
      "type": "warning",
      "valid": false,
    },
    Object {
      "content": undefined,
      "message": "Expected string, received undefined.",
      "property": "og:description",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Expected string, received undefined.",
      "property": "og:site_name",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Expected determiner to be one of (a, an, the, \\"\\", auto), received \`undefined\`",
      "property": "og:determiner",
      "valid": true,
    },
    Object {
      "content": "http://example.com/rock.jpg",
      "message": "Expected url to have 'http' or 'https' protocol, received http:",
      "property": "og:image:[0]:url",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Failed to parse the url. Invalid URL",
      "property": "og:image:[0]:secure_url",
      "valid": true,
    },
    Object {
      "content": "300",
      "message": "Expected integer, received 300",
      "property": "og:image:[0]:width",
      "valid": true,
    },
    Object {
      "content": "300",
      "message": "Expected integer, received 300",
      "property": "og:image:[0]:height",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "\\"og:image.alt\\" is required when specifying \\"og:image\\" or \\"og:image:url\\"",
      "property": "og:image:[0]:alt",
      "type": "warning",
      "valid": false,
    },
    Object {
      "content": "http://example.com/rock2.jpg",
      "message": "Expected url to have 'http' or 'https' protocol, received http:",
      "property": "og:image:[1]:url",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Failed to parse the url. Invalid URL",
      "property": "og:image:[1]:secure_url",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Expected integer, received undefined",
      "property": "og:image:[1]:width",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Expected integer, received undefined",
      "property": "og:image:[1]:height",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "\\"og:image.alt\\" is required when specifying \\"og:image\\" or \\"og:image:url\\"",
      "property": "og:image:[1]:alt",
      "type": "warning",
      "valid": false,
    },
    Object {
      "content": "http://example.com/rock3.jpg",
      "message": "Expected url to have 'http' or 'https' protocol, received http:",
      "property": "og:image:[2]:url",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Failed to parse the url. Invalid URL",
      "property": "og:image:[2]:secure_url",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Expected integer, received undefined",
      "property": "og:image:[2]:width",
      "valid": true,
    },
    Object {
      "content": "1000",
      "message": "Expected integer, received 1000",
      "property": "og:image:[2]:height",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "\\"og:image.alt\\" is required when specifying \\"og:image\\" or \\"og:image:url\\"",
      "property": "og:image:[2]:alt",
      "type": "warning",
      "valid": false,
    },
    Object {
      "content": undefined,
      "message": "Failed to parse the url. Invalid URL",
      "property": "og:video:url",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Failed to parse the url. Invalid URL",
      "property": "og:video:secure_url",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Expected integer, received undefined",
      "property": "og:video:width",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Expected integer, received undefined",
      "property": "og:video:height",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Failed to parse the url. Invalid URL",
      "property": "og:audio:url",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Failed to parse the url. Invalid URL",
      "property": "og:audio:secure_url",
      "valid": true,
    },
  ],
}
`;

exports[`baseline 1`] = `
Object {
  "errors": Array [
    Object {
      "content": undefined,
      "message": "\\"og:image.alt\\" is required when specifying \\"og:image\\" or \\"og:image:url\\"",
      "property": "og:image:alt",
      "type": "warning",
      "valid": false,
    },
  ],
  "validations": Array [
    Object {
      "content": "https://kaihao.dev/",
      "message": "Expected url to have 'http' or 'https' protocol, received https:",
      "property": "og:url",
      "valid": true,
    },
    Object {
      "content": "Kai Hao",
      "message": "Either \\"og:title\\" property or <title> value is required.",
      "property": "og:title",
      "valid": true,
    },
    Object {
      "content": "website",
      "message": "\\"og:type\\" should be one of the below, instead received \`\\"website\\"\`.
(music.song, music.album, music.playlist, music.radio_station, video.movie, video.episode, video.tv_show, video.other, article, book, profile, website)",
      "property": "og:type",
      "valid": true,
    },
    Object {
      "content": "I&#x27;m Kai Hao, a front-end developer in Taiwan.",
      "message": "Expected string, received I&#x27;m Kai Hao, a front-end developer in Taiwan..",
      "property": "og:description",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Expected string, received undefined.",
      "property": "og:site_name",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Expected determiner to be one of (a, an, the, \\"\\", auto), received \`undefined\`",
      "property": "og:determiner",
      "valid": true,
    },
    Object {
      "content": "https://kaihao.dev/static/15baf5b2b73048942a827496d3805470/70e2c/default-meta-image.png",
      "message": "Expected url to have 'http' or 'https' protocol, received https:",
      "property": "og:image:url",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Failed to parse the url. Invalid URL",
      "property": "og:image:secure_url",
      "valid": true,
    },
    Object {
      "content": "1200",
      "message": "Expected integer, received 1200",
      "property": "og:image:width",
      "valid": true,
    },
    Object {
      "content": "626",
      "message": "Expected integer, received 626",
      "property": "og:image:height",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "\\"og:image.alt\\" is required when specifying \\"og:image\\" or \\"og:image:url\\"",
      "property": "og:image:alt",
      "type": "warning",
      "valid": false,
    },
    Object {
      "content": undefined,
      "message": "Failed to parse the url. Invalid URL",
      "property": "og:video:url",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Failed to parse the url. Invalid URL",
      "property": "og:video:secure_url",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Expected integer, received undefined",
      "property": "og:video:width",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Expected integer, received undefined",
      "property": "og:video:height",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Failed to parse the url. Invalid URL",
      "property": "og:audio:url",
      "valid": true,
    },
    Object {
      "content": undefined,
      "message": "Failed to parse the url. Invalid URL",
      "property": "og:audio:secure_url",
      "valid": true,
    },
  ],
}
`;
